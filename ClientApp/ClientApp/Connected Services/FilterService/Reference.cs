//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FilterService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FilterService.IKeywordFilterService")]
    public interface IKeywordFilterService
    {
        
        // CODEGEN: Parameter 'keyword_suggestions_list' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'Microsoft.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordFilterService/FilterByTerm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="keyword_suggestions_list")]
        FilterService.FilterByTermResponse FilterByTerm(FilterService.FilterByTermRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordFilterService/FilterByTerm", ReplyAction="*")]
        System.Threading.Tasks.Task<FilterService.FilterByTermResponse> FilterByTermAsync(FilterService.FilterByTermRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KeywordSuggestions
    {
        
        private Idea[] ideasField;
        
        private Question[] questionsField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace = "", Order =0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("idea", Namespace = "")]
        public Idea[] ideas
        {
            get
            {
                return this.ideasField;
            }
            set
            {
                this.ideasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Namespace = "", Order =1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("question", Namespace = "")]
        public Question[] questions
        {
            get
            {
                return this.questionsField;
            }
            set
            {
                this.questionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="")]
    public partial class Idea
    {
        
        private string keywordField;
        
        private string difficultyField;
        
        private string volumeField;
        
        private System.DateTime lastUpdatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0, Namespace = "")]
        public string keyword
        {
            get
            {
                return this.keywordField;
            }
            set
            {
                this.keywordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1, Namespace = "")]
        public string difficulty
        {
            get
            {
                return this.difficultyField;
            }
            set
            {
                this.difficultyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2, Namespace = "")]
        public string volume
        {
            get
            {
                return this.volumeField;
            }
            set
            {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3, Namespace = "")]
        public System.DateTime lastUpdated
        {
            get
            {
                return this.lastUpdatedField;
            }
            set
            {
                this.lastUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="")]
    public partial class Question
    {
        
        private string keywordField;
        
        private string difficultyField;
        
        private string volumeField;
        
        private string lastUpdatedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 0, Namespace = "")]
        public string keyword
        {
            get
            {
                return this.keywordField;
            }
            set
            {
                this.keywordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1, Namespace = "")]
        public string difficulty
        {
            get
            {
                return this.difficultyField;
            }
            set
            {
                this.difficultyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order = 2, Namespace = "")]
        public string volume
        {
            get
            {
                return this.volumeField;
            }
            set
            {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3, Namespace = "")]
        public string lastUpdated
        {
            get
            {
                return this.lastUpdatedField;
            }
            set
            {
                this.lastUpdatedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FilterByTerm", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FilterByTermRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string term;
        
        public FilterByTermRequest()
        {
        }
        
        public FilterByTermRequest(string term)
        {
            this.term = term;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FilterByTermResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FilterByTermResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("keyword_suggestions")]
        public FilterService.KeywordSuggestions[] keyword_suggestions_list;
        
        public FilterByTermResponse()
        {
        }
        
        public FilterByTermResponse(FilterService.KeywordSuggestions[] keyword_suggestions_list)
        {
            this.keyword_suggestions_list = keyword_suggestions_list;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IKeywordFilterServiceChannel : FilterService.IKeywordFilterService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class KeywordFilterServiceClient : System.ServiceModel.ClientBase<FilterService.IKeywordFilterService>, FilterService.IKeywordFilterService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public KeywordFilterServiceClient() : 
                base(KeywordFilterServiceClient.GetDefaultBinding(), KeywordFilterServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IKeywordFilterService_soap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KeywordFilterServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(KeywordFilterServiceClient.GetBindingForEndpoint(endpointConfiguration), KeywordFilterServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KeywordFilterServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(KeywordFilterServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KeywordFilterServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(KeywordFilterServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public KeywordFilterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FilterService.FilterByTermResponse FilterService.IKeywordFilterService.FilterByTerm(FilterService.FilterByTermRequest request)
        {
            return base.Channel.FilterByTerm(request);
        }
        
        public FilterService.KeywordSuggestions[] FilterByTerm(string term)
        {
            FilterService.FilterByTermRequest inValue = new FilterService.FilterByTermRequest();
            inValue.term = term;
            FilterService.FilterByTermResponse retVal = ((FilterService.IKeywordFilterService)(this)).FilterByTerm(inValue);
            return retVal.keyword_suggestions_list;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FilterService.FilterByTermResponse> FilterService.IKeywordFilterService.FilterByTermAsync(FilterService.FilterByTermRequest request)
        {
            return base.Channel.FilterByTermAsync(request);
        }
        
        public System.Threading.Tasks.Task<FilterService.FilterByTermResponse> FilterByTermAsync(string term)
        {
            FilterService.FilterByTermRequest inValue = new FilterService.FilterByTermRequest();
            inValue.term = term;
            return ((FilterService.IKeywordFilterService)(this)).FilterByTermAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IKeywordFilterService_soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IKeywordFilterService_soap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:10981/ServiceFilter.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return KeywordFilterServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IKeywordFilterService_soap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return KeywordFilterServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IKeywordFilterService_soap);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IKeywordFilterService_soap,
        }
    }
}
