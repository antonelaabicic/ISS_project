@page "/keyword-suggestions/{Id:int}"
@using ClientApp.Dto
@inject TokenHttpClientService TokenService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h2 class="my-4">Keyword Suggestion #@Id</h2>

@if (Suggestion == null)
{
    <p>Loading...</p>
}
else
{
    <h4 class="text-secondary">Ideas</h4>
    <table class="table table-hover table-sm mb-5">
        <thead class="table-warning">
            <tr>
                <th>Keyword</th>
                <th>Difficulty</th>
                <th>Volume</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var idea in Suggestion.Ideas)
            {
                <tr>
                    <td>@idea.Keyword</td>
                    <td>@idea.Difficulty</td>
                    <td>@idea.Volume</td>
                    <td>@idea.LastUpdated?.ToString("dd.MM.yyyy HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>

    <h4 class="text-secondary">Questions</h4>
    <table class="table table-hover table-sm">
        <thead class="table-warning">
            <tr>
                <th>Keyword</th>
                <th>Difficulty</th>
                <th>Volume</th>
                <th>Last Updated</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var question in Suggestion.Questions)
            {
                <tr>
                    <td>@question.Keyword</td>
                    <td>@question.Difficulty</td>
                    <td>@question.Volume</td>
                    <td>@question.LastUpdated?.ToString("dd.MM.yyyy HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-4">
        <button class="btn btn-secondary" @onclick="NavigateBack">Back</button>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    private KeywordSuggestionsDto? Suggestion;
    private bool isInitialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            isInitialized = true;
            try
            {
                await LoadDetails();
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine("Failed to load details: " + ex.Message);
                Navigation.NavigateTo("/login", true);
                Navigation.Refresh();
            }
        }
    }

    private async Task LoadDetails()
    {
        var response = await TokenService.TryWithRefresh(client =>
            client.GetAsync($"api/keyword-suggestions/{Id}")
        );

        if (response.IsSuccessStatusCode)
        {
            Suggestion = await response.Content.ReadFromJsonAsync<KeywordSuggestionsDto>();
        }
        else
        {
            throw new Exception("Unauthorized or failed to fetch data");
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/keyword-suggestions", true);
        Navigation.Refresh();
    }
}
